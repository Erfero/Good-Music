{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { environment } from 'src/environment/environment';\nimport { ALBUMS, ALBUM_LISTS } from './mock-albums';\nimport * as i0 from \"@angular/core\";\nexport class AlbumService {\n  constructor() {\n    this._albums = ALBUMS;\n    this._albumsList = ALBUM_LISTS;\n    this.sendCurrentNumberPage = new Subject();\n  }\n  getAlbums() {\n    return this._albums;\n  }\n  getAlbum(id) {\n    return this._albums.find(album => album.id === id);\n  }\n  getAlbumList(id) {\n    return this._albumsList.find(list => list.id === id);\n  }\n  count() {\n    return this._albums.length;\n  }\n  paginate(start, end) {\n    return this._albums.slice(start, end).sort((a, b) => b.duration - a.duration);\n  }\n  order(callback) {\n    this._albums.sort(callback);\n    return this;\n  }\n  limit(start, end) {\n    this._albums = this._albums.slice(start, end);\n    return this;\n  }\n  search(word) {\n    return this._albums.filter(album => {\n      return album.title.toLowerCase().includes(word.trim().toLowerCase());\n    });\n  }\n  searchV2(word) {\n    let re = new RegExp(word.trim(), \"g\");\n    return this._albums.filter(album => album.title.match(re));\n  }\n  paginateNumberPage() {\n    return environment.numberPage;\n  }\n  currentPage(numberPage) {\n    return this.sendCurrentNumberPage.next(numberPage);\n  }\n}\nAlbumService.ɵfac = function AlbumService_Factory(t) {\n  return new (t || AlbumService)();\n};\nAlbumService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AlbumService,\n  factory: AlbumService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Subject","environment","ALBUMS","ALBUM_LISTS","AlbumService","constructor","_albums","_albumsList","sendCurrentNumberPage","getAlbums","getAlbum","id","find","album","getAlbumList","list","count","length","paginate","start","end","slice","sort","a","b","duration","order","callback","limit","search","word","filter","title","toLowerCase","includes","trim","searchV2","re","RegExp","match","paginateNumberPage","numberPage","currentPage","next","factory","ɵfac","providedIn"],"sources":["C:\\app-music\\src\\app\\album.service.ts"],"sourcesContent":["import { EnvironmentInjector, Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { environment } from 'src/environment/environment';\r\nimport { Album, List, SortAlbumCallback } from './album';\r\nimport { ALBUMS, ALBUM_LISTS } from './mock-albums';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlbumService {\r\n  private _albums: Album[] = ALBUMS;\r\n\r\n  private _albumsList: List[] = ALBUM_LISTS;\r\n\r\n  sendCurrentNumberPage = new Subject<number>();\r\n\r\n  constructor() { }\r\n\r\n  getAlbums(): Album[] {\r\n    return this._albums;\r\n  }\r\n\r\n  getAlbum(id: string): Album | undefined {\r\n    return this._albums.find(album => album.id === id);\r\n  }\r\n  getAlbumList(id: string): List | undefined {\r\n    return this._albumsList.find(list => list.id === id);\r\n  }\r\n  count() {\r\n    return this._albums.length;\r\n  }\r\n  paginate(start: number, end: number): Album[] {\r\n    return this._albums.slice(start, end).sort((a: Album, b: Album) => b.duration - a.duration);\r\n  }\r\n\r\n  order(callback: SortAlbumCallback): AlbumService {\r\n    this._albums.sort(callback);\r\n    return this;\r\n\r\n  }\r\n\r\n  limit(start: number, end: number): AlbumService {\r\n    this._albums = this._albums.slice(start, end);\r\n    return this;\r\n  }\r\n\r\n  search(word: string): Album[] {\r\n    return this._albums\r\n      .filter(album => {\r\n        return album.title\r\n          .toLowerCase()\r\n          .includes(word.trim().toLowerCase());\r\n      });\r\n  }\r\n\r\n  searchV2(word: string): Album[] {\r\n    let re = new RegExp(word.trim(), \"g\")\r\n    return this._albums.filter(album => album.title.match(re));\r\n  }\r\n\r\n  paginateNumberPage(): number {\r\n    return environment.numberPage;\r\n  }\r\n\r\ncurrentPage(numberPage: number) {\r\n  return this.sendCurrentNumberPage.next(numberPage);\r\n}\r\n}\r\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;AAC9B,SAASC,WAAW,QAAQ,6BAA6B;AAEzD,SAASC,MAAM,EAAEC,WAAW,QAAQ,eAAe;;AAKnD,OAAM,MAAOC,YAAY;EAOvBC,YAAA;IANQ,KAAAC,OAAO,GAAYJ,MAAM;IAEzB,KAAAK,WAAW,GAAWJ,WAAW;IAEzC,KAAAK,qBAAqB,GAAG,IAAIR,OAAO,EAAU;EAE7B;EAEhBS,SAASA,CAAA;IACP,OAAO,IAAI,CAACH,OAAO;EACrB;EAEAI,QAAQA,CAACC,EAAU;IACjB,OAAO,IAAI,CAACL,OAAO,CAACM,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACF,EAAE,KAAKA,EAAE,CAAC;EACpD;EACAG,YAAYA,CAACH,EAAU;IACrB,OAAO,IAAI,CAACJ,WAAW,CAACK,IAAI,CAACG,IAAI,IAAIA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAC;EACtD;EACAK,KAAKA,CAAA;IACH,OAAO,IAAI,CAACV,OAAO,CAACW,MAAM;EAC5B;EACAC,QAAQA,CAACC,KAAa,EAAEC,GAAW;IACjC,OAAO,IAAI,CAACd,OAAO,CAACe,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC,CAACE,IAAI,CAAC,CAACC,CAAQ,EAAEC,CAAQ,KAAKA,CAAC,CAACC,QAAQ,GAAGF,CAAC,CAACE,QAAQ,CAAC;EAC7F;EAEAC,KAAKA,CAACC,QAA2B;IAC/B,IAAI,CAACrB,OAAO,CAACgB,IAAI,CAACK,QAAQ,CAAC;IAC3B,OAAO,IAAI;EAEb;EAEAC,KAAKA,CAACT,KAAa,EAAEC,GAAW;IAC9B,IAAI,CAACd,OAAO,GAAG,IAAI,CAACA,OAAO,CAACe,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC;IAC7C,OAAO,IAAI;EACb;EAEAS,MAAMA,CAACC,IAAY;IACjB,OAAO,IAAI,CAACxB,OAAO,CAChByB,MAAM,CAAClB,KAAK,IAAG;MACd,OAAOA,KAAK,CAACmB,KAAK,CACfC,WAAW,EAAE,CACbC,QAAQ,CAACJ,IAAI,CAACK,IAAI,EAAE,CAACF,WAAW,EAAE,CAAC;IACxC,CAAC,CAAC;EACN;EAEAG,QAAQA,CAACN,IAAY;IACnB,IAAIO,EAAE,GAAG,IAAIC,MAAM,CAACR,IAAI,CAACK,IAAI,EAAE,EAAE,GAAG,CAAC;IACrC,OAAO,IAAI,CAAC7B,OAAO,CAACyB,MAAM,CAAClB,KAAK,IAAIA,KAAK,CAACmB,KAAK,CAACO,KAAK,CAACF,EAAE,CAAC,CAAC;EAC5D;EAEAG,kBAAkBA,CAAA;IAChB,OAAOvC,WAAW,CAACwC,UAAU;EAC/B;EAEFC,WAAWA,CAACD,UAAkB;IAC5B,OAAO,IAAI,CAACjC,qBAAqB,CAACmC,IAAI,CAACF,UAAU,CAAC;EACpD;;AAzDarC,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;SAAZA,YAAY;EAAAwC,OAAA,EAAZxC,YAAY,CAAAyC,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}